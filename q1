#include <stdio.h>

int main() {
    float matrix[3][3], transpose[3][3], cofactor[3][3], adjoint[3][3], inverse[3][3];
    float determinant = 0;
    printf("Enter elements of a 3x3 matrix:\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("Element [%d][%d]: ", i + 1, j + 1);
            scanf("%f", &matrix[i][j]);
        }
    }

    printf("\nOriginal Matrix:\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("%8.2f ", matrix[i][j]);
        }
        printf("\n");
    }

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            transpose[j][i] = matrix[i][j];
        }
    }
    printf("\nTranspose of Matrix:\n");

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("%8.2f ", transpose[i][j]);
        }
        printf("\n");
    }
    determinant = 0;

    for (int i = 0; i < 3; i++) {
        determinant += matrix[0][i] * (matrix[1][(i + 1) % 3] * matrix[2][(i + 2) % 3] -
                            matrix[1][(i + 2) % 3] * matrix[2][(i + 1) % 3]);
    }
    printf("\nDeterminant of Matrix = %.2f\n", determinant);

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            float subMat[2][2];
            int p = 0, q = 0;
            for (int row = 0; row < 3; row++) {
                for (int col = 0; col < 3; col++) {
                    if (row != i && col != j) {
                        subMat[p][q++] = matrix[row][col];
                        if (q == 2) {
                            q = 0;
                            p++;
                        }
                    }
                }
            }
            cofactor[i][j] = ((i + j) % 2 == 0 ? 1 : -1) *
                             (subMat[0][0] * subMat[1][1] - subMat[0][1] * subMat[1][0]);
        }
    }

    printf("\nCofactor Matrix:\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("%8.2f ", cofactor[i][j]);
        }
        printf("\n");
    }

    
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            adjoint[j][i] = cofactor[i][j];
        }
    }

    printf("\nAdjoint Matrix:\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("%8.2f ", adjoint[i][j]);
        }
        printf("\n");
    }

    
    if (determinant != 0) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                inverse[i][j] = adjoint[i][j] / determinant;
            }
        }

        printf("\nInverse Matrix:\n");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                printf("%8.3f ", inverse[i][j]);
            }
            printf("\n");
        }
    } else {
        printf("\nMatrix is Singular â€” No Inverse Exists.\n");
    }

    return 0;
}
